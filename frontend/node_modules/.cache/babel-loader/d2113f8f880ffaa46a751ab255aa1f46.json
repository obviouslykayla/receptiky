{"ast":null,"code":"import React, { useState } from 'react';\nimport \"./ReviewForm.css\";\nconst ReviewForm = () => {\n  const [formData, setFormData] = useState({\n    user: '',\n    rating: '',\n    comment: ''\n  });\n  const changeHandler = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const submitHandler = async e => {\n    e.preventDefault();\n    try {\n      await fetch('http://localhost:4000/reviews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title,\n          content,\n          rating\n        })\n      });\n      alert('Review submitted successfully!');\n      setFormData({\n        user: '',\n        rating: 0,\n        comment: ''\n      });\n    } catch (err) {\n      console.error('Error submitting review:', err);\n      alert('Failed to submit review. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null); /*<form onSubmit={handleSubmit}>\r\n                                                                   <input type=\"text\" name=\"use\" value={formData.use} onChange={handleChange} placeholder=\"Your Name\" required />\r\n                                                                   <input type=\"number\" name=\"rating\" value={formData.rating} onChange={handleChange} min={1} max={5} placeholder=\"Rating (1-5)\" required />\r\n                                                                   <textarea name=\"comment\" value={formData.comment} onChange={handleChange} placeholder=\"Your Review\" required />\r\n                                                                   <button type=\"submit\">Submit Review</button>\r\n                                                                 </form>*/\n};\nexport default ReviewForm;","map":{"version":3,"names":["React","useState","ReviewForm","formData","setFormData","user","rating","comment","changeHandler","e","target","name","value","submitHandler","preventDefault","fetch","method","headers","body","JSON","stringify","title","content","alert","err","console","error","createElement","Fragment"],"sources":["M:/recipes/frontend/src/components/ReviewForm/ReviewForm.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport \"./ReviewForm.css\"\r\n\r\nconst ReviewForm = () => {\r\n    const [formData, setFormData] = useState({ user: '', rating: '', comment: '' });\r\n\r\n    const changeHandler = e => {\r\n      setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n  \r\n    const submitHandler = async e => {\r\n      e.preventDefault();\r\n      try {\r\n        await fetch('http://localhost:4000/reviews',{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify({title, content, rating}),\r\n        });\r\n        alert('Review submitted successfully!');\r\n        setFormData({ user: '', rating: 0, comment: '' });\r\n      } catch (err) {\r\n        console.error('Error submitting review:', err);\r\n        alert('Failed to submit review. Please try again later.');\r\n      }\r\n    };\r\n  \r\n    return (<></>\r\n      \r\n    );/*<form onSubmit={handleSubmit}>\r\n        <input type=\"text\" name=\"use\" value={formData.use} onChange={handleChange} placeholder=\"Your Name\" required />\r\n        <input type=\"number\" name=\"rating\" value={formData.rating} onChange={handleChange} min={1} max={5} placeholder=\"Rating (1-5)\" required />\r\n        <textarea name=\"comment\" value={formData.comment} onChange={handleChange} placeholder=\"Your Review\" required />\r\n        <button type=\"submit\">Submit Review</button>\r\n      </form>*/\r\n}\r\n\r\nexport default ReviewForm\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AAEzB,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAC;IAAEI,IAAI,EAAE,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EAE/E,MAAMC,aAAa,GAAGC,CAAC,IAAI;IACzBL,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACM,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,aAAa,GAAG,MAAMJ,CAAC,IAAI;IAC/BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,KAAK,CAAC,+BAA+B,EAAC;QACxCC,MAAM,EAAC,MAAM;QACbC,OAAO,EAAC;UACJ,cAAc,EAAC;QACnB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACC,KAAK;UAAEC,OAAO;UAAEhB;QAAM,CAAC;MACjD,CAAC,CAAC;MACFiB,KAAK,CAAC,gCAAgC,CAAC;MACvCnB,WAAW,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;IACnD,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;MAC9CD,KAAK,CAAC,kDAAkD,CAAC;IAC3D;EACF,CAAC;EAED,oBAAQvB,KAAA,CAAA2B,aAAA,CAAA3B,KAAA,CAAA4B,QAAA,MAAI,CAAC,CAEX;AACN;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe1B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}