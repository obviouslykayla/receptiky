{"ast":null,"code":"var _jsxFileName = \"M:\\\\recipes\\\\frontend\\\\src\\\\context\\\\ShopContext.jsx\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport all_recipes from \"../components/assets/all-recipes\";\nexport const ShopContext = createContext(null);\nconst ShopContextProvider = props => {\n  /*const [all_recipes, setAll_Recipes] = useState([]);\r\n  useEffect(()=>{\r\n      fetch('http://localhost:4000/allrecipes').then((response)=>response.json()).then((data)=>setAll_Recipes(data))\r\n  },[])\r\n  const getDefaultCart = ()=>{\r\n      let cart ={};\r\n      for (let index = 0; index < all_recipes.length+1; index++) {\r\n          cart[index]=0;\r\n      }\r\n      return cart;\r\n  }*/\n\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  const saveForLater = recipeId => {\n    setCartItems(prev => ({\n      ...prev,\n      [recipeId]: prev[recipeId] + 1\n    }));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/savelater', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"recipeId\": recipeId\n        })\n      }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error('error:', error));\n    }\n  };\n  const removeFromSave = recipeId => {\n    setCartItems(prev => ({\n      ...prev,\n      [recipeId]: prev[recipeId] - 1\n    }));\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = all_recipes.find(recipe => recipe.id == Number(item));\n        totalAmount += itemInfo.new_price * cartItems[item];\n      }\n    }\n  };\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItem += cartItems[item];\n      }\n    }\n    return totalItem;\n  };\n  const contextValue = {\n    getTotalCartItems,\n    getTotalCartAmount,\n    all_recipes,\n    cartItems,\n    saveForLater,\n    removeFromSave\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ShopContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, props.children));\n};\nexport default ShopContextProvider;","map":{"version":3,"names":["React","createContext","useEffect","useState","all_recipes","ShopContext","ShopContextProvider","props","cartItems","setCartItems","getDefaultCart","saveForLater","recipeId","prev","localStorage","getItem","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","data","console","log","catch","error","removeFromSave","getTotalCartAmount","totalAmount","item","itemInfo","find","recipe","id","Number","new_price","getTotalCartItems","totalItem","contextValue","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","children"],"sources":["M:/recipes/frontend/src/context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport all_recipes from \"../components/assets/all-recipes\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst ShopContextProvider = (props)=>{\r\n    /*const [all_recipes, setAll_Recipes] = useState([]);\r\n    useEffect(()=>{\r\n        fetch('http://localhost:4000/allrecipes').then((response)=>response.json()).then((data)=>setAll_Recipes(data))\r\n    },[])\r\n    const getDefaultCart = ()=>{\r\n        let cart ={};\r\n        for (let index = 0; index < all_recipes.length+1; index++) {\r\n            cart[index]=0;\r\n        }\r\n        return cart;\r\n    }*/\r\n\r\n    const [cartItems, setCartItems]= useState(getDefaultCart()); \r\n    \r\n    const saveForLater= (recipeId)=>{\r\n        setCartItems((prev)=>({...prev,[recipeId]:prev[recipeId]+1}));\r\n        if(localStorage.getItem('auth-token')){\r\n            fetch('http://localhost:4000/savelater',{\r\n                method:'POST',\r\n                headers:{\r\n                    Accept:'application/json',\r\n                    'auth-token':`${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type':'application/json'\r\n                },\r\n                body:JSON.stringify({\"recipeId\":recipeId}),\r\n            }).then((response)=>response.json()).then((data)=>console.log(data)).catch((error)=>console.error('error:', error))\r\n        }\r\n    }\r\n    const removeFromSave= (recipeId)=>{\r\n        setCartItems((prev)=>({...prev,[recipeId]:prev[recipeId]-1}));\r\n    }\r\n    const getTotalCartAmount = ()=>{\r\n        let totalAmount = 0;\r\n        for(const item in cartItems){\r\n            if(cartItems[item]>0){\r\n                let itemInfo= all_recipes.find((recipe)=>recipe.id==Number(item))\r\n                totalAmount+=itemInfo.new_price * cartItems[item];\r\n            }\r\n        }\r\n    }\r\n    const getTotalCartItems = ()=>{\r\n        let totalItem = 0;\r\n        for(const item in cartItems){\r\n            if(cartItems[item] > 0){\r\n                totalItem += cartItems[item];\r\n            }\r\n        }\r\n        return totalItem;\r\n    }\r\n\r\n    const contextValue = {getTotalCartItems,getTotalCartAmount,all_recipes, cartItems,saveForLater,removeFromSave};\r\n\r\n    return(\r\n        <div>\r\n        <ShopContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n        </div>\r\n    )\r\n}\r\nexport default ShopContextProvider"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}